imports:
    - { resource: database.php }

framework:
    secret:          $3cr3t
    router:          { resource: "%kernel.root_dir%/config/routing_test.yml" }
    form:            true
    csrf_protection: true
    validation:
        enabled: true
        enable_annotations: true
    templating:      { engines: ['twig'] }
    profiler:        { only_exceptions: false }
    test:            ~
    session:
        storage_id:     session.storage.filesystem

monolog:
    handlers:
        main:
            type:  stream
            path:  %kernel.logs_dir%/%kernel.environment%.log
            level: debug
        firephp:
            type:  firephp
            level: info

twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

doctrine:
    orm:
        auto_generate_proxy_classes: true
        auto_mapping: true
        resolve_target_entities:                                                                                                                                                                                                        
            Asbo\WhosWhoBundle\Model\FraUserInterface: Asbo\WhosWhoBundle\Features\Fixtures\Project\TestBundle\Entity\User
            Asbo\WhosWhoBundle\Model\FraImageInterface: Asbo\WhosWhoBundle\Features\Fixtures\Project\TestBundle\Entity\Image


jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER', 'ROLE_WHOSWHO_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    .*
            form_login:
                check_path: _security_check
                login_path: _login
            logout:
                path:   _logout
                target: _demo
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

asbo_whos_who:
    test: ~
